spring:
  application:
    name: bookjourney
  profiles:
    group:
      local: db-local, port-local, common
      dev: db-dev, port-dev, common
      prod: db-prod, port-dev, common
    active: local

---
#개발용 DB
spring:
  config:
    activate:
      on-profile: dev

  datasource:
    url: jdbc:mysql://${DB_HOST}:3306/book_journey
    username: ${DEV_DB_USER}
    password: ${DEV_DB_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.MySQLDialect

  data:
    redis:
      host: localhost
      port: 6379

---
#로컬용 DB
spring:
  config:
    activate:
      on-profile: local
  #
  #  datasource:
  #    url: jdbc:mysql://localhost:3306/book_journey
  #    username: ${LOCAL_DB_USER}
  #    password: ${LOCAL_DB_PASSWORD}
  #    driver-class-name: com.mysql.cj.jdbc.Driver
  #
  #  jpa:
  #    hibernate:
  #      ddl-auto: update
  #    show-sql: true
  #    properties:
  #      hibernate:
  #        format_sql: true
  #        dialect: org.hibernate.dialect.MySQLDialect

#  datasource:
#    url: jdbc:mysql://localhost:3306/book_journey
#    username: ${LOCAL_DB_USER}
#    password: ${LOCAL_DB_PASSWORD}
#    driver-class-name: com.mysql.cj.jdbc.Driver
#
#  jpa:
#    hibernate:
#      ddl-auto: update
#    show-sql: true
#    properties:
#      hibernate:
#        format_sql: true
#        dialect: org.hibernate.dialect.MySQLDialect

  datasource:
    url: jdbc:h2:mem:BookJourneyBackendApplication;MODE=MYSQL;
    username: sa
    password:
    driver-class-name: org.h2.Driver

  h2:
    console:
      enabled: true

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true

  data:
    redis:
      host: localhost
      port: 6379

jwt:
  secret: ${JWT_SECRET}
  access-token-expiration: 604800000 #7일
  refresh-token-expiration: 1209600000 # 14일 (14 * 24 * 60 * 60 * 1000)
#jwt:
#  secret: ${JWT_SECRET} #토큰 테스트용
#  access-token-expiration: 25000 #25초
#  refresh-token-expiration: 60000 #1분

---
#배포용 DB
spring:
  config:
    activate:
      on-profile: prod
  datasource:
    url: jdbc:mysql://my-db:3306/mydb
    username: root
    password: verysecret
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.MySQLDialect

  data:
    redis:
      host: my-cache-server
      port: 6379

jwt:
  secret: ${JWT_SECRET}
  access-token-expiration: 3600000 #1시간
  refresh-token-expiration: 604800000 #7일


---
#개발용 및 배포용 포트
spring:
  config:
    activate:
      on-profile: port-dev

server:
  port: 9000
  servlet:
    context-path: /

---
#로컬용 포트
spring:
  config:
    activate:
      on-profile: port-local

server:
  port: 8080
  servlet:
    context-path: /

---
#공통
spring:
  config:
    activate:
      on-profile: common

  docker:
    compose:
      enabled: false

  mail:
    host: smtp.gmail.com
    port: 587
    username: bookjourney.server@gmail.com
    password: ${EMAIL_SECRET}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
          connectiontimeout: 5000
          timeout: 5000
          writetimeout: 5000
    auth-code-expiration-millis: 1800000  # 30 * 60 * 1000 == 30?


aladin:
  key: ${ALADIN_API_KEY}

#logging:
#  level:
#    root: DEBUG
#    org.springframework.mail: DEBUG